---
openapi: 3.0.0
info:
  version: '1.0'
  title: 'API Reference for MAKEEN DEX'
  description: |
    MAKEEN DEX is a connector that provides a RESTful API to submit requests to Fabric networks and an event stream to listen for Fabric events over websocket or webhook based channels.
servers:
  - url: '/'
security:
  #- basic_auth: []
  - bearer_auth: []
paths:
  /identities:
    get:
      summary: 'List all signing identities registered with the Fabric CA'
      parameters: []
      responses:
        200:
          description: 'Signing identities returned'
          content:
            application/json:
              schema:
                type: 'array'
                items:
                  $ref: '#/components/schemas/identity_summary'
    post:
      summary: 'Registers a new signing account with the Fabric CA'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity_register_input'
      responses:
        201:
          description: 'Signing identity registered'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity_register_output'
  /identities/{username}:
    get:
      summary: 'Get the signing identity registered with the Fabric CA'
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        200:
          description: 'Signing identity returned'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity'
    put:
      summary: Modify the existing signing identity
      parameters:
        - $ref: '#/components/parameters/username'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity_register_input'
      responses:
        201:
          description: 'Signing identity modified'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity_modify_output'
  /identities/{username}/enroll:
    post:
      summary: 'Enroll the registered signing identity with the Fabric CA'
      parameters:
        - $ref: '#/components/parameters/username'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity_enroll_input'
      responses:
        200:
          description: 'Signing identity enrolled'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity_enroll_output'
  /identities/{username}/reenroll:
    post:
      summary: 'Re-enroll the registered signing identity with the Fabric CA'
      parameters:
        - $ref: '#/components/parameters/username'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity_reenroll_input'
      responses:
        200:
          description: 'Signing identity re-enrolled'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity_enroll_output'
  /identities/{username}/revoke:
    post:
      summary: 'Revoke the existing enrollment certificates for the registered signing identity with the Fabric CA'
      parameters:
        - $ref: '#/components/parameters/username'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity_revoke_input'
      responses:
        200:
          description: 'Signing identity certificates revoked'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity_revoke_output'
  /chaininfo:
    get:
      summary: Return information of the ledger for a specified channel
      parameters:
        - $ref: '#/components/parameters/channel'
        - $ref: '#/components/parameters/signer'
      responses:
        200:
          description: Chain info retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chaininfo'
  /blocks/{blockNumberOrHash}:
    get:
      summary: 'Query the block by number'
      parameters:
        - $ref: '#/components/parameters/blockNumberOrHash'
        - $ref: '#/components/parameters/channel'
        - $ref: '#/components/parameters/signer'
      responses:
        200:
          description: 'Block retrieved'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_block_output'
  /blockByTxId/{txId}:
    get:
      summary: 'Query the block by a transaction Id included in the block'
      parameters:
        - $ref: '#/components/parameters/txId'
        - $ref: '#/components/parameters/channel'
        - $ref: '#/components/parameters/signer'
      responses:
        200:
          description: 'Block retrieved'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_block_output'
  /transactions:
    post:
      summary: 'Send proposal to peers then send the transaction with the endorsements to the orderer'
      parameters:
        - $ref: '#/components/parameters/sync'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/tx_input_unstructured'
                - $ref: '#/components/schemas/tx_input_structured'
      responses:
        200:
          description: 'Transaction submitted (fly-sync=false) or committed (fly-sync-true)'
  /transactions/{txId}:
    get:
      summary: 'Query the channel for a transaction by ID (hash)'
      parameters:
        - $ref: '#/components/parameters/txId'
        - $ref: '#/components/parameters/channel'
        - $ref: '#/components/parameters/signer'
      responses:
        200:
          description: 'Transaction retrieved'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_transaction_output'
  /query:
    post:
      summary: 'Send query request to the target chaincode'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/query_input_unstructured'
                - $ref: '#/components/schemas/query_input_structured'
      responses:
        200:
          description: 'Transaction submitted (fly-sync=false) or committed (fly-sync-true)'
  /receipts:
    get:
      summary: "Retrieve transaction receipts from the receipts store. Only applicable to transactions submitted with 'fly-sync=false'"
      responses:
        200:
          description: 'Receipts returned'
  /receipts/{receiptId}:
    get:
      summary: "Retrieve transaction receipt by the receipt Id. Only applicable to transactions submitted with 'fly-sync=false'"
      parameters:
        - $ref: '#/components/parameters/receiptId'
      responses:
        200:
          description: 'Receipt returned'
  /eventstreams:
    get:
      summary: 'List all event streams'
      responses:
        200:
          description: 'Event streams returned'
    post:
      summary: 'Create a new event stream'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/eventstream_input'
      responses:
        200:
          description: 'Event stream created'
  /eventstreams/{eventstreamId}:
    get:
      summary: 'Get event stream by id'
      parameters:
        - $ref: '#/components/parameters/eventstreamId'
      responses:
        200:
          description: 'Event stream retrieved'
    delete:
      summary: 'Delete the event stream by id'
      parameters:
        - $ref: '#/components/parameters/eventstreamId'
      responses:
        200:
          description: 'Event stream deleted'
  /subscriptions:
    get:
      summary: 'List all subscriptions under the specified event stream'
      responses:
        200:
          description: 'Subscriptions returned'
    post:
      summary: 'Create a new subscription under the specified event stream'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscription_input'
      responses:
        200:
          description: 'Subscription created'
  /subscriptions/{subscriptionId}:
    get:
      summary: 'Get subscription by id'
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
      responses:
        200:
          description: 'Subscription retrieved'
    delete:
      summary: 'Delete the subscription by id'
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
      responses:
        200:
          description: 'Subscription deleted'
components:
  securitySchemes:
    basic_auth:
      type: http
      scheme: basic
    bearer_auth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
  schemas:
    identity_prop_name:
      type: 'string'
      description: 'unique name/id of the signing identity'
    identity_type:
      type: 'string'
      description: "Type of identity. Default is 'client' if not specified in the request"
      default: 'client'
      enum:
        - client
        - peer
        - orderer
        - user
    identity_maxEnrollments:
      type: integer
      description: 'Maximum number of times this identity can be enrolled'
    identity_attributes:
      type: object
    identity_attribute_reqs:
      type: object
      description: The attributes to include in the certificate. They must have been defined for the identity during registration. If omitted, "hf.Affiliation", "hf.EnrollmentID", "hf.Type" will be added
    identity_register_input:
      type: 'object'
      properties:
        name:
          $ref: '#/components/schemas/identity_prop_name'
        type:
          $ref: '#/components/schemas/identity_type'
        maxEnrollments:
          $ref: '#/components/schemas/identity_maxEnrollments'
        attributes:
          $ref: '#/components/schemas/identity_attributes'
    identity_register_output:
      type: 'object'
      properties:
        name:
          $ref: '#/components/schemas/identity_prop_name'
        secret:
          type: 'string'
    identity_modify_input:
      type: 'object'
      properties:
        type:
          $ref: '#/components/schemas/identity_type'
        maxEnrollments:
          $ref: '#/components/schemas/identity_maxEnrollments'
        attributes:
          $ref: '#/components/schemas/identity_attributes'
    identity_modify_output:
      type: 'object'
      properties:
        name:
          $ref: '#/components/schemas/identity_prop_name'
    identity_enroll_input:
      type: 'object'
      properties:
        secret:
          type: 'string'
          description: 'Must be the enrollment secret returned in the response of the identity registration call'
        attributes:
          $ref: '#/components/schemas/identity_attribute_reqs'
    identity_reenroll_input:
      type: 'object'
      properties:
        attributes:
          $ref: '#/components/schemas/identity_attribute_reqs'
    identity_enroll_output:
      type: 'object'
      properties:
        success:
          type: boolean
    identity_revoke_input:
      type: object
      properties:
        reason:
          type: string
          description: See https://godoc.org/golang.org/x/crypto/ocsp for valid values.  The default value is 0 (ocsp.Unspecified)
        generateCRL:
          type: boolean
          description: Whether to generate a CRL and return it in the response
    identity_revoke_output:
      type: object
      properties:
        revokedCerts:
          type: array
          items:
            type: object
            properties:
              aki:
                type: string
              serial:
                type: string
        CRL:
          type: string
    identity_summary:
      allOf:
        - $ref: '#/components/schemas/identity_register_input'
        - properties:
            maxEnrollments:
              type: 'integer'
              description: 'Maximum number of enrollments allowed for this identity. -1 means no limits'
            affiliation:
              type: 'string'
            caname:
              type: 'string'
              description: 'Name of the Certificate Authority used to register the identity. Fabric CA suppors multiple Certificate Authorities. An empty string means the default authority'
    identity:
      allOf:
        - $ref: '#/components/schemas/identity_summary'
        - properties:
            organization:
              type: 'string'
            mspId:
              type: 'string'
            enrollmentCert:
              type: 'string'
              description: 'Enrollment certificate for the signing identity. If missing, then the identity was only registered but not enrolled'
            caCert:
              type: 'string'
              description: 'Certificate of the issuing CA'
    input_headers:
      type: 'object'
      properties:
        signer:
          type: 'string'
          description: 'Name of the signing identity'
        channel:
          type: 'string'
          description: 'Target channel to send the transaction to'
        chaincode:
          type: 'string'
          description: 'Name of the chaincode to invoke'
    tx_input_headers:
      allOf:
        - properties:
            type:
              type: 'string'
              enum:
                - SendTransaction
        - $ref: '#/components/schemas/input_headers'
    schema_header:
      type: 'object'
      properties:
        payloadSchema:
          type: 'object'
          properties:
            type:
              type: 'string'
              enum:
                - array
            prefixItems:
              type: 'array'
              items:
                oneOf:
                  - type: 'string'
                  - type: 'object'
    tx_input_headers_with_schema:
      allOf:
        - $ref: '#/components/schemas/tx_input_headers'
        - $ref: '#/components/schemas/schema_header'
    tx_input_unstructured:
      description: "Use a flat list of string arguments for the 'args' property"
      type: 'object'
      properties:
        headers:
          $ref: '#/components/schemas/tx_input_headers'
        func:
          type: 'string'
          description: 'Target function name to invoke'
        args:
          type: 'array'
          items:
            type: 'string'
            description: 'Parameters to pass to the chaincode function'
        transientMap:
          type: object
          items:
            type: string
        init:
          type: 'boolean'
          default: false
    tx_input_structured:
      description: "Specify a JSON schema in the headers, so that the 'args' property can be specified as a JSON object"
      type: 'object'
      properties:
        headers:
          $ref: '#/components/schemas/tx_input_headers_with_schema'
        func:
          type: 'string'
          description: 'Target function name to invoke'
        args:
          type: 'object'
          description: 'JSON structure for the parameters to pass to the chaincode function'
        init:
          type: 'boolean'
          default: false
    input_headers_with_schema:
      allOf:
        - $ref: '#/components/schemas/input_headers'
        - $ref: '#/components/schemas/schema_header'
    query_input_unstructured:
      description: "Use a flat list of string arguments for the 'args' property"
      type: 'object'
      properties:
        headers:
          $ref: '#/components/schemas/input_headers'
        func:
          type: 'string'
          description: 'Target function name to invoke'
        args:
          type: 'array'
          items:
            type: 'string'
            description: 'Parameters to pass to the chaincode function'
        strongread:
          type: boolean
          description: By default only the client organization's first peer is contacted for the query request; set to true to contact multiple peers in the channel
    query_input_structured:
      description: "Specify a JSON schema in the headers, so that the 'args' property can be specified as a JSON object"
      type: 'object'
      properties:
        headers:
          $ref: '#/components/schemas/input_headers_with_schema'
        func:
          type: 'string'
          description: 'Target function name to invoke'
        args:
          type: 'object'
          description: 'JSON structure for the parameters to pass to the chaincode function'
        strongread:
          type: boolean
          description: By default only the client organization's first peer is contacted for the query request; set to true to contact multiple peers in the channel
    webhook_info:
      type: 'object'
      properties:
        url:
          type: 'string'
        headers:
          type: 'object'
          description: 'Use this to specify security headers for authentication with the webhook endpoint'
        tlsSkipHostVerify:
          type: 'boolean'
          description: 'Whether to disable server TLS certificate verification'
        requestTimeoutSec:
          type: 'integer'
          description: 'Request timeout (seconds)'
    websocket_info:
      type: 'object'
      properties:
        topic:
          type: 'string'
          description: 'Specify the topic for websocket clients to use in order to listen for events'
        distributionMode:
          type: 'string'
          description: "Specify 'broadcast' to send events to all clients listening on the topic; otherwise only one of the listening clients gets the event"
          default: ''
          enum:
            - ''
            - broadcast
            - workloadDistribution
    eventstream_input:
      type: 'object'
      properties:
        name:
          type: 'string'
        type:
          type: 'string'
          enum:
            - websocket
            - webhook
          default: websocket
        websocket:
          oneOf:
            - $ref: '#/components/schemas/websocket_info'
            - $ref: '#/components/schemas/webhook_info'
        suspended:
          type: boolean
          default: false
          description: if set to 'true', the stream will be suspended
        batchSize:
          type: integer
          default: 1
          description: how many events should be packed in each event batch to deliver to the client. Range is 1-1000
        batchTimeoutMS:
          type: integer
          default: 5000
          description: if there are pending events to deliver, but the batch size has not been reached, this is the maximum amount of milliseconds to wait before delivering the current batch
        errorHandling:
          type: string
          description: when the delivery should be blocked when the event listener client failed to take delivery, or skip and continue
          enum:
            - block
            - skip
          default: skip
        retryTimeoutSec:
          type: integer
          description: total amount of time (in seconds) to retry a failed event delivery
        blockedRetryDelaySec:
          type: integer
          description: amount of time (in seconds) to wait before retrying a failed delivery
        timestamps:
          type: boolean
          default: false
          description: Chaincode events from Fabric do not contain timestamps. If set to 'true', FabConnect to make a call to Fabric to download the block to obtain the timestamp, and set on the event. Note doing this incurs time overhead in events processing
        timestampCacheSize:
          type: integer
          default: 1000
          description: The size of the internal cache for the blocknumber <-> timestamp map
    subscription_input:
      type: 'object'
      properties:
        name:
          type: string
        stream:
          type: string
          description: 'The id of the event stream the subscription belongs to'
        channel:
          type: string
        signer:
          type: string
        fromBlock:
          type: string
          description: 'The block number to subscribe from, ignoring any blocks earlier. If left empty, the subscription will be on the newest block'
        payloadType:
          type: string
          default: string
          enum:
            - json
            - string
        filter:
          type: object
          properties:
            blockType:
              type: string
              description: "Specify 'tx' for endorser blocks; specify 'config' for config or config update blocks"
              default: 'tx'
              enum:
                - tx
                - config
            chaincodeId:
              type: string
              default: ''
              description: 'Optionally specify a particular chaincode name to subscribe to'
            eventFilter:
              type: string
              default: ''
              description: 'Optionally specify a regular expression for the event names'
    chaininfo:
      type: object
      properties:
        height:
          type: integer
        current_block_hash:
          type: string
          description: hexidecimal string for the hash of the current block
        previous_block_hash:
          type: string
          description: hexidecimal string for the hash of the previous block
    get_transaction_output:
      type: object
      properties:
        raw:
          $ref: '#/components/schemas/raw_transaction'
        transaction:
          $ref: '#/components/schemas/transaction'
    raw_transaction:
      type: object
      description: The transaction object defined by Fabric protobuf type `common.Envelope`
      properties:
        payload:
          type: object
          properties:
            data:
              type: object
              properties:
                actions:
                  type: array
                  items:
                    $ref: '#/components/schemas/payload_action'
            header:
              type: object
              properties:
                channel_header:
                  type: object
                  properties:
                    channel_id:
                      type: string
                    epoch:
                      type: string
                    timestamp:
                      type: integer
                      description: unix nano time for when the transaction was submitted
                    tx_id:
                      type: string
                    type:
                      type: string
                    version:
                      type: integer
                signature_header:
                  $ref: '#/components/schemas/signature_header'
        siganture:
          type: string
          description: base64 encoded signature bytes
    payload_action:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/signature_header'
        payload:
          type: object
          properties:
            action:
              type: object
              properties:
                proposal_response_payload:
                  type: object
                  properties:
                    extension:
                      type: object
                      properties:
                        chaincode_id:
                          $ref: '#/components/schemas/chaincode_id'
                        events:
                          type: object
                          properties:
                            chaincodeId:
                              type: string
                            transactionId:
                              type: string
                            timestamp:
                              type: string
                              description: unix nano of the time when the transaction was submitted
                            eventName:
                              type: string
                            payload:
                              oneOf:
                                - type: string
                                - type: object
                                - type: array
                    proposal_hash:
                      type: string
                      description: base64 encoded bytes for the proposal's hash
            chaincode_proposal_payload:
              type: object
              properties:
                TransientMap:
                  type: object
                input:
                  type: object
                  properties:
                    chaincode_spec:
                      type: object
                      properties:
                        chaincode_id:
                          $ref: '#/components/schemas/chaincode_id'
                        input:
                          $ref: '#/components/schemas/chaincode_input'
    chaincode_input:
      type: object
      properties:
        args:
          type: array
          items:
            type: string
        is_init:
          type: boolean
    signature_header:
      type: object
      properties:
        creator:
          type: object
          properties:
            mspid:
              type: string
            id_bytes:
              type: string
              description: base64 encoded bytes for the signer's enrollment certificate
        nonce:
          type: string
          description: base64 encoded bytes for the transaction nonce
    creator:
      type: object
      properties:
        msp_id:
          type: string
        cert:
          type: string
    chaincode_id:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
    transaction:
      type: object
      properties:
        type:
          type: string
        tx_id:
          type: string
        nonce:
          type: string
          description: hexidecimal encoded bytes for the transaction nonce
        creator:
          $ref: '#/components/schemas/creator'
        status:
          type: string
        signature:
          type: string
          description: base64 encoded bytes for the transaction signature
        timestamp:
          type: integer
          description: unix nano time for when the transaction was submitted
        actions:
          type: array
          items:
            $ref: '#/components/schemas/transaction_action'
    transaction_action:
      type: object
      properties:
        nonce:
          type: string
          description: hexidecimal encoded bytes for the transaction action's nonce
        creator:
          $ref: '#/components/schemas/creator'
        transient_map:
          type: object
        chaincode_id:
          $ref: '#/components/schemas/chaincode_id'
        input:
          $ref: '#/components/schemas/chaincode_input'
        proposal_hash:
          type: string
          description: hexidecimal encoded bytes of the proposal's hash
        event:
          type: object
          properties:
            chaincodeId:
              type: string
            transactionId:
              type: string
            timestamp:
              type: string
            eventName:
              type: string
            payload:
              oneOf:
                - type: string
                - type: object
                - type: array
    config:
      type: object
      properties:
        type:
          type: string
        signature:
          type: string
        timestamp:
          type: integer
        nonce:
          type: string
        creator:
          $ref: '#/components/schemas/creator'
        config:
          type: object
          description: the object defined by the Fabric protobuf type `common.Config`
    get_block_output:
      type: object
      properties:
        block:
          type: object
          description: the optimized data structure for the retrieved block
          properties:
            block_numer:
              type: integer
            data_hash:
              type: string
              description: base64 encoded bytes of the hash of the block content
            previous_hash:
              type: string
              description: base64 encoded bytes of the hash of the previous block
            transactions:
              type: array
              items:
                $ref: '#/components/schemas/transaction'
            config:
              $ref: '#/components/schemas/config'
        raw:
          type: object
          description: the raw data structure defined by Fabric protobuf type `common.Block`
          properties:
            data:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/raw_transaction'
            header:
              type: object
              properties:
                number:
                  type: integer
                data_hash:
                  type: string
                  description: base64 encoded bytes of the hash of the block content
                previous_hash:
                  type: string
                  description: base64 encoded bytes of the hash of the previous block
            metadata:
              type: object
              properties:
                metadata:
                  description: metadata about the block content, details see Fabric protobuf type `common.BlockMetadataIndex`
                  type: array
                  items:
                    type: string
  parameters:
    username:
      required: true
      name: 'username'
      in: 'path'
      schema:
        type: 'string'
    txId:
      required: true
      name: 'txId'
      in: 'path'
      schema:
        type: 'string'
    receiptId:
      required: true
      name: 'receiptId'
      in: 'path'
      schema:
        type: 'string'
    eventstreamId:
      required: true
      name: 'eventstreamId'
      in: 'path'
      schema:
        type: 'string'
    subscriptionId:
      required: true
      name: 'subscriptionId'
      in: 'path'
      schema:
        type: 'string'
    sync:
      name: 'fly-sync'
      in: 'query'
      schema:
        type: 'boolean'
    channel:
      name: 'fly-channel'
      in: 'query'
      schema:
        type: 'string'
    signer:
      name: 'fly-signer'
      in: 'query'
      schema:
        type: 'string'
    blockNumberOrHash:
      description: block number or block hash
      required: true
      name: blockNumberOrHash
      in: path
      schema:
        type: string
